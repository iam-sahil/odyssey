{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "tab-focus-plugin",
  "type": "registry:ui",
  "registryDependencies": [
    "@shadcn-editor/rich-text-editor-plugin"
  ],
  "files": [
    {
      "path": "registry/new-york-v4/editor/plugins/tab-focus-plugin.tsx",
      "content": "\"use client\"\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport { useEffect } from \"react\"\nimport { useLexicalComposerContext } from \"@lexical/react/LexicalComposerContext\"\nimport {\n  $getSelection,\n  $isRangeSelection,\n  $setSelection,\n  FOCUS_COMMAND,\n} from \"lexical\"\n\nconst COMMAND_PRIORITY_LOW = 1\nconst TAB_TO_FOCUS_INTERVAL = 100\n\nlet lastTabKeyDownTimestamp = 0\nlet hasRegisteredKeyDownListener = false\n\nfunction registerKeyTimeStampTracker() {\n  window.addEventListener(\n    \"keydown\",\n    (event: KeyboardEvent) => {\n      // Tab\n      if (event.key === \"Tab\") {\n        lastTabKeyDownTimestamp = event.timeStamp\n      }\n    },\n    true\n  )\n}\n\nexport function TabFocusPlugin(): null {\n  const [editor] = useLexicalComposerContext()\n\n  useEffect(() => {\n    if (!hasRegisteredKeyDownListener) {\n      registerKeyTimeStampTracker()\n      hasRegisteredKeyDownListener = true\n    }\n\n    return editor.registerCommand(\n      FOCUS_COMMAND,\n      (event: FocusEvent) => {\n        const selection = $getSelection()\n        if ($isRangeSelection(selection)) {\n          if (\n            lastTabKeyDownTimestamp + TAB_TO_FOCUS_INTERVAL >\n            event.timeStamp\n          ) {\n            $setSelection(selection.clone())\n          }\n        }\n        return false\n      },\n      COMMAND_PRIORITY_LOW\n    )\n  }, [editor])\n\n  return null\n}\n",
      "type": "registry:component",
      "target": "components/editor/plugins/tab-focus-plugin.tsx"
    }
  ]
}