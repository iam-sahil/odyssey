{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "markdown-plugin-demo",
  "type": "registry:example",
  "registryDependencies": [
    "@shadcn-editor/markdown-plugin"
  ],
  "files": [
    {
      "path": "registry/new-york-v4/examples/markdown-plugin-demo.tsx",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { CodeHighlightNode, CodeNode } from \"@lexical/code\"\nimport { AutoLinkNode, LinkNode } from \"@lexical/link\"\nimport { ListItemNode, ListNode } from \"@lexical/list\"\nimport {\n  CHECK_LIST,\n  ELEMENT_TRANSFORMERS,\n  MULTILINE_ELEMENT_TRANSFORMERS,\n  TEXT_FORMAT_TRANSFORMERS,\n  TEXT_MATCH_TRANSFORMERS,\n} from \"@lexical/markdown\"\nimport { OverflowNode } from \"@lexical/overflow\"\nimport { CheckListPlugin } from \"@lexical/react/LexicalCheckListPlugin\"\nimport {\n  InitialConfigType,\n  LexicalComposer,\n} from \"@lexical/react/LexicalComposer\"\nimport { LexicalErrorBoundary } from \"@lexical/react/LexicalErrorBoundary\"\nimport { HorizontalRuleNode } from \"@lexical/react/LexicalHorizontalRuleNode\"\nimport { HorizontalRulePlugin } from \"@lexical/react/LexicalHorizontalRulePlugin\"\nimport { ListPlugin } from \"@lexical/react/LexicalListPlugin\"\nimport { MarkdownShortcutPlugin } from \"@lexical/react/LexicalMarkdownShortcutPlugin\"\nimport { RichTextPlugin } from \"@lexical/react/LexicalRichTextPlugin\"\nimport { TablePlugin } from \"@lexical/react/LexicalTablePlugin\"\nimport { HeadingNode, QuoteNode } from \"@lexical/rich-text\"\nimport { TableCellNode, TableNode, TableRowNode } from \"@lexical/table\"\nimport { ParagraphNode, TextNode } from \"lexical\"\n\nimport { ContentEditable } from \"@/registry/new-york-v4/editor/editor-ui/content-editable\"\nimport { TweetNode } from \"@/registry/new-york-v4/editor/nodes/embeds/tweet-node\"\nimport { EmojiNode } from \"@/registry/new-york-v4/editor/nodes/emoji-node\"\nimport { ImageNode } from \"@/registry/new-york-v4/editor/nodes/image-node\"\nimport { TwitterPlugin } from \"@/registry/new-york-v4/editor/plugins/embeds/twitter-plugin\"\nimport { EmojisPlugin } from \"@/registry/new-york-v4/editor/plugins/emojis-plugin\"\nimport { ImagesPlugin } from \"@/registry/new-york-v4/editor/plugins/images-plugin\"\nimport { editorTheme } from \"@/registry/new-york-v4/editor/themes/editor-theme\"\nimport { EMOJI } from \"@/registry/new-york-v4/editor/transformers/markdown-emoji-transformer\"\nimport { HR } from \"@/registry/new-york-v4/editor/transformers/markdown-hr-transformer\"\nimport { IMAGE } from \"@/registry/new-york-v4/editor/transformers/markdown-image-transformer\"\nimport { TABLE } from \"@/registry/new-york-v4/editor/transformers/markdown-table-transformer\"\nimport { TWEET } from \"@/registry/new-york-v4/editor/transformers/markdown-tweet-transformer\"\nimport { TooltipProvider } from \"@/registry/new-york-v4/ui/tooltip\"\n\nconst editorConfig: InitialConfigType = {\n  namespace: \"Editor\",\n  theme: editorTheme,\n  nodes: [\n    HeadingNode,\n    ParagraphNode,\n    TextNode,\n    QuoteNode,\n    ListNode,\n    ListItemNode,\n    LinkNode,\n    OverflowNode,\n    TableNode,\n    TableCellNode,\n    TableRowNode,\n    CodeNode,\n    CodeHighlightNode,\n    HorizontalRuleNode,\n    ImageNode,\n    EmojiNode,\n    AutoLinkNode,\n    TweetNode,\n  ],\n  onError: (error: Error) => {\n    console.error(error)\n  },\n}\n\nexport default function RichTextEditorDemo() {\n  return (\n    <div className=\"bg-background w-full overflow-hidden rounded-lg border\">\n      <LexicalComposer\n        initialConfig={{\n          ...editorConfig,\n        }}\n      >\n        <TooltipProvider>\n          <Plugins />\n        </TooltipProvider>\n      </LexicalComposer>\n    </div>\n  )\n}\n\nconst placeholder = \"Start typing...\"\n\nexport function Plugins() {\n  const [floatingAnchorElem, setFloatingAnchorElem] =\n    useState<HTMLDivElement | null>(null)\n\n  const onRef = (_floatingAnchorElem: HTMLDivElement) => {\n    if (_floatingAnchorElem !== null) {\n      setFloatingAnchorElem(_floatingAnchorElem)\n    }\n  }\n\n  return (\n    <div className=\"relative\">\n      {/* toolbar plugins */}\n\n      <div className=\"relative\">\n        <RichTextPlugin\n          contentEditable={\n            <div className=\"\">\n              <div className=\"\" ref={onRef}>\n                <ContentEditable\n                  placeholder={placeholder}\n                  className=\"ContentEditable__root relative block h-72 min-h-72 min-h-full overflow-auto px-8 py-4 focus:outline-none\"\n                />\n              </div>\n            </div>\n          }\n          ErrorBoundary={LexicalErrorBoundary}\n        />\n        <TablePlugin />\n\n        <HorizontalRulePlugin />\n        <ImagesPlugin />\n        <EmojisPlugin />\n        <TwitterPlugin />\n        <CheckListPlugin />\n        <ListPlugin />\n\n        <MarkdownShortcutPlugin\n          transformers={[\n            TABLE,\n            HR,\n            IMAGE,\n            EMOJI,\n            TWEET,\n            CHECK_LIST,\n            ...ELEMENT_TRANSFORMERS,\n            ...MULTILINE_ELEMENT_TRANSFORMERS,\n            ...TEXT_FORMAT_TRANSFORMERS,\n            ...TEXT_MATCH_TRANSFORMERS,\n          ]}\n        />\n        {/* rest of the plugins */}\n      </div>\n    </div>\n  )\n}\n",
      "type": "registry:example"
    }
  ]
}