{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "icons-sliders-horizontal",
  "type": "registry:ui",
  "title": "Sliders Horizontal Icon",
  "description": "Sliders horizontal icon component.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "@animate-ui/icons-icon"
  ],
  "files": [
    {
      "path": "registry/icons/sliders-horizontal/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { motion, type Variants } from 'motion/react';\n\nimport {\n  getVariants,\n  useAnimateIconContext,\n  IconWrapper,\n  type IconProps,\n} from '@/components/animate-ui/icons/icon';\n\ntype SlidersHorizontalProps = IconProps<keyof typeof animations>;\n\nconst animations = {\n  default: {\n    line1: {\n      initial: { x2: 10 },\n      animate: { x2: 4, transition: { ease: 'easeInOut', duration: 0.4 } },\n    },\n    line2: {\n      initial: { x1: 14, x2: 14 },\n      animate: {\n        x1: 8,\n        x2: 8,\n        transition: { ease: 'easeInOut', duration: 0.4 },\n      },\n    },\n    line3: {\n      initial: { x1: 14 },\n      animate: { x1: 8, transition: { ease: 'easeInOut', duration: 0.4 } },\n    },\n    line4: {\n      initial: { x2: 8 },\n      animate: { x2: 16, transition: { ease: 'easeInOut', duration: 0.4 } },\n    },\n    line5: {\n      initial: { x1: 8, x2: 8 },\n      animate: {\n        x1: 16,\n        x2: 16,\n        transition: { ease: 'easeInOut', duration: 0.4 },\n      },\n    },\n    line6: {\n      initial: { x1: 12 },\n      animate: { x1: 20, transition: { ease: 'easeInOut', duration: 0.4 } },\n    },\n    line7: {\n      initial: { x2: 12 },\n      animate: { x2: 7, transition: { ease: 'easeInOut', duration: 0.4 } },\n    },\n    line8: {\n      initial: { x1: 16, x2: 16 },\n      animate: {\n        x1: 11,\n        x2: 11,\n        transition: { ease: 'easeInOut', duration: 0.4 },\n      },\n    },\n    line9: {\n      initial: { x1: 16 },\n      animate: { x1: 11, transition: { ease: 'easeInOut', duration: 0.4 } },\n    },\n  } satisfies Record<string, Variants>,\n  'default-loop': {\n    line1: {\n      initial: { x2: 10 },\n      animate: {\n        x2: [10, 4, 10],\n        transition: { ease: 'easeInOut', duration: 0.8 },\n      },\n    },\n    line2: {\n      initial: { x1: 14, x2: 14 },\n      animate: {\n        x1: [14, 8, 14],\n        x2: [14, 8, 14],\n        transition: { ease: 'easeInOut', duration: 0.8 },\n      },\n    },\n    line3: {\n      initial: { x1: 14 },\n      animate: {\n        x1: [14, 8, 14],\n        transition: { ease: 'easeInOut', duration: 0.8 },\n      },\n    },\n    line4: {\n      initial: { x2: 8 },\n      animate: {\n        x2: [8, 16, 8],\n        transition: { ease: 'easeInOut', duration: 0.8 },\n      },\n    },\n    line5: {\n      initial: { x1: 8, x2: 8 },\n      animate: {\n        x1: [8, 16, 8],\n        x2: [8, 16, 8],\n        transition: { ease: 'easeInOut', duration: 0.8 },\n      },\n    },\n    line6: {\n      initial: { x1: 12 },\n      animate: {\n        x1: [12, 20, 12],\n        transition: { ease: 'easeInOut', duration: 0.8 },\n      },\n    },\n    line7: {\n      initial: { x2: 12 },\n      animate: {\n        x2: [12, 7, 12],\n        transition: { ease: 'easeInOut', duration: 0.8 },\n      },\n    },\n    line8: {\n      initial: { x1: 16, x2: 16 },\n      animate: {\n        x1: [16, 11, 16],\n        x2: [16, 11, 16],\n        transition: { ease: 'easeInOut', duration: 0.8 },\n      },\n    },\n    line9: {\n      initial: { x1: 16 },\n      animate: {\n        x1: [16, 11, 16],\n        transition: { ease: 'easeInOut', duration: 0.8 },\n      },\n    },\n  } satisfies Record<string, Variants>,\n} as const;\n\nfunction IconComponent({ size, ...props }: SlidersHorizontalProps) {\n  const { controls } = useAnimateIconContext();\n  const variants = getVariants(animations);\n\n  return (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...props}\n    >\n      <motion.line\n        x1=\"3\"\n        y1=\"5\"\n        x2=\"10\"\n        y2=\"5\"\n        variants={variants.line1}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1=\"14\"\n        y1=\"3\"\n        x2=\"14\"\n        y2=\"7\"\n        variants={variants.line2}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1=\"14\"\n        y1=\"5\"\n        x2=\"21\"\n        y2=\"5\"\n        variants={variants.line3}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1=\"3\"\n        y1=\"12\"\n        x2=\"8\"\n        y2=\"12\"\n        variants={variants.line4}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1=\"8\"\n        y1=\"10\"\n        x2=\"8\"\n        y2=\"14\"\n        variants={variants.line5}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1=\"12\"\n        y1=\"12\"\n        x2=\"21\"\n        y2=\"12\"\n        variants={variants.line6}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1=\"3\"\n        y1=\"19\"\n        x2=\"12\"\n        y2=\"19\"\n        variants={variants.line7}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1=\"16\"\n        y1=\"17\"\n        x2=\"16\"\n        y2=\"21\"\n        variants={variants.line8}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1=\"16\"\n        y1=\"19\"\n        x2=\"21\"\n        y2=\"19\"\n        variants={variants.line9}\n        initial=\"initial\"\n        animate={controls}\n      />\n    </motion.svg>\n  );\n}\n\nfunction SlidersHorizontal(props: SlidersHorizontalProps) {\n  return <IconWrapper icon={IconComponent} {...props} />;\n}\n\nexport {\n  animations,\n  SlidersHorizontal,\n  SlidersHorizontal as SlidersHorizontalIcon,\n  type SlidersHorizontalProps,\n  type SlidersHorizontalProps as SlidersHorizontalIconProps,\n};\n",
      "type": "registry:ui",
      "target": "components/animate-ui/icons/sliders-horizontal.tsx"
    }
  ],
  "meta": {
    "keywords": [
      "settings",
      "filters",
      "controls"
    ]
  }
}