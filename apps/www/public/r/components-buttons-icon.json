{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "components-buttons-icon",
  "type": "registry:ui",
  "title": "Icon Button",
  "description": "An icon button component with a variety of styles and animations.",
  "dependencies": [
    "class-variance-authority"
  ],
  "registryDependencies": [
    "@animate-ui/primitives-buttons-button",
    "@animate-ui/primitives-effects-particles"
  ],
  "files": [
    {
      "path": "registry/components/buttons/icon/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport {\n  Button as ButtonPrimitive,\n  type ButtonProps as ButtonPrimitiveProps,\n} from '@/components/animate-ui/primitives/buttons/button';\nimport { cn } from '@/lib/utils';\nimport {\n  Particles,\n  ParticlesEffect,\n} from '@/components/animate-ui/primitives/effects/particles';\n\nconst buttonVariants = cva(\n  \"flex items-center justify-center rounded-md transition-[box-shadow,_color,_background-color,_border-color,_outline-color,_text-decoration-color,_fill,_stroke] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          'bg-primary text-primary-foreground shadow-xs hover:bg-primary/90',\n        accent: 'bg-accent text-accent-foreground shadow-xs hover:bg-accent/90',\n        destructive:\n          'bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60',\n        outline:\n          'border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50',\n        secondary:\n          'bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80',\n        ghost:\n          'hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50',\n        link: 'text-primary underline-offset-4 hover:underline',\n      },\n      size: {\n        default: 'size-9',\n        xs: \"size-7 [&_svg:not([class*='size-'])]:size-3.5 rounded-md\",\n        sm: 'size-8 rounded-md',\n        lg: 'size-10 rounded-md',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  },\n);\n\ntype IconButtonProps = Omit<ButtonPrimitiveProps, 'asChild'> &\n  VariantProps<typeof buttonVariants> & {\n    children?: React.ReactNode;\n  };\n\nfunction IconButton({\n  className,\n  onClick,\n  variant,\n  size,\n  children,\n  ...props\n}: IconButtonProps) {\n  const [isActive, setIsActive] = React.useState(false);\n  const [key, setKey] = React.useState(0);\n\n  return (\n    <Particles asChild animate={isActive} key={key}>\n      <ButtonPrimitive\n        data-slot=\"icon-button\"\n        className={cn(buttonVariants({ variant, size, className }))}\n        onClick={(e) => {\n          setKey((prev) => prev + 1);\n          setIsActive(true);\n          onClick?.(e);\n        }}\n        {...props}\n      >\n        {children}\n        <ParticlesEffect\n          data-variant={variant}\n          className=\"bg-neutral-500 size-1 rounded-full\"\n        />\n      </ButtonPrimitive>\n    </Particles>\n  );\n}\n\nexport { IconButton, buttonVariants, type IconButtonProps };\n",
      "type": "registry:ui",
      "target": "components/animate-ui/components/buttons/icon.tsx"
    }
  ]
}