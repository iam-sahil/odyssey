{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "icons-axis-3d",
  "type": "registry:ui",
  "title": "Axis 3D Icon",
  "description": "Axis 3D icon component.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "@animate-ui/icons-icon"
  ],
  "files": [
    {
      "path": "registry/icons/axis-3d/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { motion, type Variants } from 'motion/react';\n\nimport {\n  getVariants,\n  useAnimateIconContext,\n  IconWrapper,\n  type IconProps,\n} from '@/components/animate-ui/icons/icon';\n\ntype Axis3DProps = IconProps<keyof typeof animations>;\n\nconst pathAnimation: Variants = {\n  initial: {\n    pathLength: 1,\n    opacity: 1,\n  },\n  animate: {\n    pathLength: [0, 1],\n    opacity: [0, 1],\n    transition: {\n      duration: 0.3,\n      ease: 'easeInOut',\n    },\n  },\n};\n\nconst animations = {\n  default: {\n    group: {\n      initial: {},\n      animate: {\n        transition: {\n          staggerChildren: 0.2,\n        },\n      },\n    },\n    path1: {},\n    path2: pathAnimation,\n    path3: pathAnimation,\n    path4: pathAnimation,\n  } satisfies Record<string, Variants>,\n} as const;\n\nfunction IconComponent({ size, ...props }: Axis3DProps) {\n  const { controls } = useAnimateIconContext();\n  const variants = getVariants(animations);\n\n  return (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...props}\n    >\n      <motion.path\n        d=\"M4 4v15a1 1 0 0 0 1 1h15\"\n        variants={variants.path1}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.g variants={variants.group} initial=\"initial\" animate={controls}>\n        <motion.path d=\"M4.293 19.707 6 18\" variants={variants.path2} />\n        <motion.path d=\"m9 15 1.5-1.5\" variants={variants.path3} />\n        <motion.path d=\"M13.5 10.5 15 9\" variants={variants.path4} />\n      </motion.g>\n    </motion.svg>\n  );\n}\n\nfunction Axis3D(props: Axis3DProps) {\n  return <IconWrapper icon={IconComponent} {...props} />;\n}\n\nexport {\n  animations,\n  Axis3D,\n  Axis3D as Axis3DIcon,\n  type Axis3DProps,\n  type Axis3DProps as Axis3DIconProps,\n};\n",
      "type": "registry:ui",
      "target": "components/animate-ui/icons/axis-3d.tsx"
    }
  ],
  "meta": {
    "keywords": [
      "gizmo",
      "coordinates"
    ]
  }
}