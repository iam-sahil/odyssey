{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "icons-between-vertical-end",
  "type": "registry:ui",
  "title": "Between Vertical End Icon",
  "description": "Between vertical end icon component.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "@animate-ui/icons-icon"
  ],
  "files": [
    {
      "path": "registry/icons/between-vertical-end/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { motion, type Variants } from 'motion/react';\n\nimport {\n  getVariants,\n  useAnimateIconContext,\n  IconWrapper,\n  type IconProps,\n} from '@/components/animate-ui/icons/icon';\n\ntype BetweenVerticalEndProps = IconProps<keyof typeof animations>;\n\nconst animations = {\n  default: {\n    leftRect: {\n      initial: {\n        x: 0,\n        transition: { ease: 'easeInOut', duration: 0.3 },\n      },\n      animate: {\n        x: -2,\n        transition: { ease: 'easeInOut', duration: 0.3 },\n      },\n    },\n    rightRect: {\n      initial: {\n        x: 0,\n        transition: { ease: 'easeInOut', duration: 0.3 },\n      },\n      animate: {\n        x: 2,\n        transition: { ease: 'easeInOut', duration: 0.3 },\n      },\n    },\n    arrow: {\n      initial: {\n        y: 0,\n        transition: { ease: 'easeInOut', duration: 0.3 },\n      },\n      animate: {\n        y: -3,\n        transition: { ease: 'easeInOut', duration: 0.3 },\n      },\n    },\n  } satisfies Record<string, Variants>,\n  'default-loop': {\n    leftRect: {\n      initial: { x: 0 },\n      animate: {\n        x: [0, -2, 0],\n        transition: { ease: 'easeInOut', duration: 0.6 },\n      },\n    },\n    rightRect: {\n      initial: { x: 0 },\n      animate: {\n        x: [0, 2, 0],\n        transition: { ease: 'easeInOut', duration: 0.6 },\n      },\n    },\n    arrow: {\n      initial: { y: 0 },\n      animate: {\n        y: [0, -3, 0],\n        transition: { ease: 'easeInOut', duration: 0.6 },\n      },\n    },\n  } satisfies Record<string, Variants>,\n} as const;\n\nfunction IconComponent({ size, ...props }: BetweenVerticalEndProps) {\n  const { controls } = useAnimateIconContext();\n  const variants = getVariants(animations);\n\n  return (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...props}\n    >\n      <motion.rect\n        width={7}\n        height={13}\n        x={3}\n        y={3}\n        rx={1}\n        variants={variants.leftRect}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.path\n        d=\"m9 22 3-3 3 3\"\n        variants={variants.arrow}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.rect\n        width={7}\n        height={13}\n        x={14}\n        y={3}\n        rx={1}\n        variants={variants.rightRect}\n        initial=\"initial\"\n        animate={controls}\n      />\n    </motion.svg>\n  );\n}\n\nfunction BetweenVerticalEnd(props: BetweenVerticalEndProps) {\n  return <IconWrapper icon={IconComponent} {...props} />;\n}\n\nexport {\n  animations,\n  BetweenVerticalEnd,\n  BetweenVerticalEnd as BetweenVerticalEndIcon,\n  type BetweenVerticalEndProps,\n  type BetweenVerticalEndProps as BetweenVerticalEndIconProps,\n};\n",
      "type": "registry:ui",
      "target": "components/animate-ui/icons/between-vertical-end.tsx"
    }
  ],
  "meta": {
    "keywords": [
      "insert",
      "add",
      "down",
      "slot",
      "squeeze",
      "space",
      "grid",
      "table",
      "columns",
      "cells",
      "excel",
      "spreadsheet",
      "accountancy",
      "data",
      "enter",
      "entry",
      "entries",
      "blocks",
      "rectangles",
      "chevron",
      "between",
      "vertical",
      "end"
    ]
  }
}