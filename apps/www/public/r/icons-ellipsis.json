{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "icons-ellipsis",
  "type": "registry:ui",
  "title": "Ellipsis Icon",
  "description": "Ellipsis icon component.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "@animate-ui/icons-icon"
  ],
  "files": [
    {
      "path": "registry/icons/ellipsis/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { motion, type Variants } from 'motion/react';\n\nimport {\n  getVariants,\n  useAnimateIconContext,\n  IconWrapper,\n  type IconProps,\n} from '@/components/animate-ui/icons/icon';\n\ntype EllipsisProps = IconProps<keyof typeof animations>;\n\nconst animations = {\n  default: {\n    group: {\n      initial: {\n        rotate: 0,\n        transition: { type: 'spring', stiffness: 60, damping: 10 },\n      },\n      animate: {\n        rotate: 180,\n        transition: { type: 'spring', stiffness: 60, damping: 10 },\n      },\n    },\n    circle1: {},\n    circle2: {},\n    circle3: {},\n  } satisfies Record<string, Variants>,\n  vertical: {\n    group: {\n      initial: {\n        rotate: 0,\n        transition: { type: 'spring', stiffness: 100, damping: 12 },\n      },\n      animate: {\n        rotate: 90,\n        transition: { type: 'spring', stiffness: 100, damping: 12 },\n      },\n    },\n    circle1: {},\n    circle2: {},\n    circle3: {},\n  } satisfies Record<string, Variants>,\n  jump: {\n    group: {},\n    circle1: {\n      initial: {\n        y: 0,\n      },\n      animate: {\n        y: [0, -2, 2],\n        transition: {\n          duration: 1.2,\n          delay: 0.4,\n          repeat: Infinity,\n          repeatType: 'mirror',\n          ease: 'easeInOut',\n        },\n      },\n    },\n    circle2: {\n      initial: {\n        y: 0,\n      },\n      animate: {\n        y: [0, -2, 2],\n        transition: {\n          duration: 1.2,\n          delay: 0.2,\n          repeat: Infinity,\n          repeatType: 'mirror',\n          ease: 'easeInOut',\n        },\n      },\n    },\n    circle3: {\n      initial: {\n        y: 0,\n      },\n      animate: {\n        y: [0, -2, 2],\n        transition: {\n          duration: 1.2,\n          repeat: Infinity,\n          repeatType: 'mirror',\n          ease: 'easeInOut',\n        },\n      },\n    },\n  } satisfies Record<string, Variants>,\n  pulse: {\n    group: {},\n    circle1: {\n      initial: {\n        scale: 1,\n      },\n      animate: {\n        scale: [1, 1.5, 1],\n        transition: {\n          duration: 1,\n          delay: 0.4,\n          ease: 'easeInOut',\n        },\n      },\n    },\n    circle2: {\n      initial: {\n        scale: 1,\n      },\n      animate: {\n        scale: [1, 1.5, 1],\n        transition: {\n          duration: 1,\n          delay: 0.2,\n          ease: 'easeInOut',\n        },\n      },\n    },\n    circle3: {\n      initial: {\n        scale: 1,\n      },\n      animate: {\n        scale: [1, 1.5, 1],\n        transition: {\n          duration: 1,\n          ease: 'easeInOut',\n        },\n      },\n    },\n  } satisfies Record<string, Variants>,\n} as const;\n\nfunction IconComponent({ size, ...props }: EllipsisProps) {\n  const { controls } = useAnimateIconContext();\n  const variants = getVariants(animations);\n\n  return (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      variants={variants.group}\n      initial=\"initial\"\n      animate={controls}\n      {...props}\n    >\n      <motion.circle\n        cx={19}\n        cy={12}\n        r={1}\n        variants={variants.circle1}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.circle\n        cx={12}\n        cy={12}\n        r={1}\n        variants={variants.circle2}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.circle\n        cx={5}\n        cy={12}\n        r={1}\n        variants={variants.circle3}\n        initial=\"initial\"\n        animate={controls}\n      />\n    </motion.svg>\n  );\n}\n\nfunction Ellipsis(props: EllipsisProps) {\n  return <IconWrapper icon={IconComponent} {...props} />;\n}\n\nexport {\n  animations,\n  Ellipsis,\n  Ellipsis as EllipsisIcon,\n  type EllipsisProps,\n  type EllipsisProps as EllipsisIconProps,\n};\n",
      "type": "registry:ui",
      "target": "components/animate-ui/icons/ellipsis.tsx"
    }
  ],
  "meta": {
    "keywords": [
      "et cetera",
      "etc",
      "loader",
      "loading",
      "progress",
      "pending",
      "throbber",
      "menu",
      "options",
      "operator",
      "code",
      "coding",
      "spread",
      "rest",
      "more",
      "further",
      "extra",
      "overflow",
      "dots",
      "â€¦",
      "..."
    ]
  }
}