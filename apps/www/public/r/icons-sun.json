{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "icons-sun",
  "type": "registry:ui",
  "title": "Sun Icon",
  "description": "Sun icon component.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "@animate-ui/icons-icon"
  ],
  "files": [
    {
      "path": "registry/icons/sun/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { motion, type Variants } from 'motion/react';\n\nimport {\n  getVariants,\n  useAnimateIconContext,\n  IconWrapper,\n  type IconProps,\n} from '@/components/animate-ui/icons/icon';\n\ntype SunProps = IconProps<keyof typeof animations>;\n\nconst animations = {\n  default: (() => {\n    const animation: Record<string, Variants> = {\n      circle: {},\n    };\n\n    for (let i = 1; i <= 8; i++) {\n      animation[`line${i}`] = {\n        initial: { opacity: 1, scale: 1 },\n        animate: {\n          opacity: [0, 1],\n          pathLength: [0, 1],\n          transition: {\n            duration: 0.6,\n            ease: 'easeInOut',\n            delay: (i - 1) * 0.15,\n          },\n        },\n      };\n    }\n\n    return animation;\n  })() satisfies Record<string, Variants>,\n} as const;\n\nfunction IconComponent({ size, ...props }: SunProps) {\n  const { controls } = useAnimateIconContext();\n  const variants = getVariants(animations);\n\n  return (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      initial=\"initial\"\n      animate={controls}\n      {...props}\n    >\n      <motion.circle\n        cx=\"12\"\n        cy=\"12\"\n        r=\"4\"\n        variants={variants.circle}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1=\"12\"\n        y1=\"4\"\n        x2=\"12\"\n        y2=\"2\"\n        variants={variants.line1}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1=\"17.7\"\n        y1=\"6.3\"\n        x2=\"19.1\"\n        y2=\"4.9\"\n        variants={variants.line2}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1=\"20\"\n        y1=\"12\"\n        x2=\"22\"\n        y2=\"12\"\n        variants={variants.line3}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1=\"17.7\"\n        y1=\"17.7\"\n        x2=\"19.1\"\n        y2=\"19.1\"\n        variants={variants.line4}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1=\"12\"\n        y1=\"20\"\n        x2=\"12\"\n        y2=\"22\"\n        variants={variants.line5}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1=\"6.3\"\n        y1=\"17.7\"\n        x2=\"4.9\"\n        y2=\"19.1\"\n        variants={variants.line6}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1=\"4\"\n        y1=\"12\"\n        x2=\"2\"\n        y2=\"12\"\n        variants={variants.line7}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1=\"6.3\"\n        y1=\"6.3\"\n        x2=\"4.9\"\n        y2=\"4.9\"\n        variants={variants.line8}\n        initial=\"initial\"\n        animate={controls}\n      />\n    </motion.svg>\n  );\n}\n\nfunction Sun(props: SunProps) {\n  return <IconWrapper icon={IconComponent} {...props} />;\n}\n\nexport {\n  animations,\n  Sun,\n  Sun as SunIcon,\n  type SunProps,\n  type SunProps as SunIconProps,\n};\n",
      "type": "registry:ui",
      "target": "components/animate-ui/icons/sun.tsx"
    }
  ],
  "meta": {
    "keywords": [
      "brightness",
      "weather",
      "light",
      "summer"
    ]
  }
}