{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "primitives-base-popover",
  "type": "registry:ui",
  "title": "Base Popover",
  "description": "An accessible popup anchored to a button.",
  "dependencies": [
    "motion",
    "@base-ui-components/react"
  ],
  "registryDependencies": [
    "@animate-ui/lib-get-strict-context",
    "@animate-ui/hooks-use-controlled-state"
  ],
  "files": [
    {
      "path": "registry/primitives/base/popover/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { Popover as PopoverPrimitive } from '@base-ui-components/react/popover';\nimport { AnimatePresence, motion, type HTMLMotionProps } from 'motion/react';\n\nimport { getStrictContext } from '@/lib/get-strict-context';\nimport { useControlledState } from '@/hooks/use-controlled-state';\n\ntype PopoverContextType = {\n  isOpen: boolean;\n  setIsOpen: PopoverProps['onOpenChange'];\n};\n\nconst [PopoverProvider, usePopover] =\n  getStrictContext<PopoverContextType>('PopoverContext');\n\ntype PopoverProps = React.ComponentProps<typeof PopoverPrimitive.Root>;\n\nfunction Popover(props: PopoverProps) {\n  const [isOpen, setIsOpen] = useControlledState({\n    value: props?.open,\n    defaultValue: props?.defaultOpen,\n    onChange: props?.onOpenChange,\n  });\n\n  return (\n    <PopoverProvider value={{ isOpen, setIsOpen }}>\n      <PopoverPrimitive.Root\n        data-slot=\"popover\"\n        {...props}\n        onOpenChange={setIsOpen}\n      />\n    </PopoverProvider>\n  );\n}\n\ntype PopoverTriggerProps = React.ComponentProps<\n  typeof PopoverPrimitive.Trigger\n>;\n\nfunction PopoverTrigger(props: PopoverTriggerProps) {\n  return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />;\n}\n\ntype PopoverPortalProps = Omit<\n  React.ComponentProps<typeof PopoverPrimitive.Portal>,\n  'keepMounted'\n>;\n\nfunction PopoverPortal(props: PopoverPortalProps) {\n  const { isOpen } = usePopover();\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <PopoverPrimitive.Portal\n          keepMounted\n          data-slot=\"popover-portal\"\n          {...props}\n        />\n      )}\n    </AnimatePresence>\n  );\n}\n\ntype PopoverPositionerProps = React.ComponentProps<\n  typeof PopoverPrimitive.Positioner\n>;\n\nfunction PopoverPositioner(props: PopoverPositionerProps) {\n  return (\n    <PopoverPrimitive.Positioner data-slot=\"popover-positioner\" {...props} />\n  );\n}\n\ntype PopoverPopupProps = Omit<\n  React.ComponentProps<typeof PopoverPrimitive.Popup>,\n  'render'\n> &\n  HTMLMotionProps<'div'>;\n\nfunction PopoverPopup({\n  initialFocus,\n  finalFocus,\n  transition = { type: 'spring', stiffness: 300, damping: 25 },\n  ...props\n}: PopoverPopupProps) {\n  return (\n    <PopoverPrimitive.Popup\n      initialFocus={initialFocus}\n      finalFocus={finalFocus}\n      render={\n        <motion.div\n          key=\"popover-popup\"\n          data-slot=\"popover-popup\"\n          initial={{ opacity: 0, scale: 0.5 }}\n          animate={{ opacity: 1, scale: 1 }}\n          exit={{ opacity: 0, scale: 0.5 }}\n          transition={transition}\n          {...props}\n        />\n      }\n    />\n  );\n}\n\ntype PopoverBackdropProps = React.ComponentProps<\n  typeof PopoverPrimitive.Backdrop\n>;\n\nfunction PopoverBackdrop(props: PopoverBackdropProps) {\n  return <PopoverPrimitive.Backdrop data-slot=\"popover-backdrop\" {...props} />;\n}\n\ntype PopoverArrowProps = React.ComponentProps<typeof PopoverPrimitive.Arrow>;\n\nfunction PopoverArrow(props: PopoverArrowProps) {\n  return <PopoverPrimitive.Arrow data-slot=\"popover-arrow\" {...props} />;\n}\n\ntype PopoverTitleProps = React.ComponentProps<typeof PopoverPrimitive.Title>;\n\nfunction PopoverTitle(props: PopoverTitleProps) {\n  return <PopoverPrimitive.Title data-slot=\"popover-title\" {...props} />;\n}\n\ntype PopoverDescriptionProps = React.ComponentProps<\n  typeof PopoverPrimitive.Description\n>;\n\nfunction PopoverDescription(props: PopoverDescriptionProps) {\n  return (\n    <PopoverPrimitive.Description data-slot=\"popover-description\" {...props} />\n  );\n}\n\ntype PopoverCloseProps = React.ComponentProps<typeof PopoverPrimitive.Close>;\n\nfunction PopoverClose(props: PopoverCloseProps) {\n  return <PopoverPrimitive.Close data-slot=\"popover-close\" {...props} />;\n}\n\nexport {\n  Popover,\n  PopoverTrigger,\n  PopoverPortal,\n  PopoverPositioner,\n  PopoverPopup,\n  PopoverBackdrop,\n  PopoverArrow,\n  PopoverTitle,\n  PopoverDescription,\n  PopoverClose,\n  usePopover,\n  type PopoverProps,\n  type PopoverTriggerProps,\n  type PopoverPortalProps,\n  type PopoverPositionerProps,\n  type PopoverPopupProps,\n  type PopoverBackdropProps,\n  type PopoverArrowProps,\n  type PopoverTitleProps,\n  type PopoverDescriptionProps,\n  type PopoverCloseProps,\n  type PopoverContextType,\n};\n",
      "type": "registry:ui",
      "target": "components/animate-ui/primitives/base/popover.tsx"
    }
  ]
}