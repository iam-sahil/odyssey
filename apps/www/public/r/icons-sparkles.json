{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "icons-sparkles",
  "type": "registry:ui",
  "title": "Sparkles Icon",
  "description": "Sparkles icon component.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "@animate-ui/icons-icon"
  ],
  "files": [
    {
      "path": "registry/icons/sparkles/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { motion, type Variants } from 'motion/react';\n\nimport {\n  getVariants,\n  useAnimateIconContext,\n  IconWrapper,\n  type IconProps,\n} from '@/components/animate-ui/icons/icon';\n\ntype SparklesProps = IconProps<keyof typeof animations>;\n\nconst animations = {\n  default: {\n    group: {\n      initial: {\n        scale: 1,\n      },\n      animate: {\n        scale: [1, 0.9, 1.1, 1],\n        transition: { duration: 0.6, ease: 'easeInOut' },\n      },\n    },\n    path: {},\n    plus: {\n      initial: { opacity: 1, scale: 1 },\n      animate: {\n        opacity: 0,\n        scale: 0,\n        transition: {\n          opacity: {\n            duration: 0.2,\n            ease: 'easeInOut',\n            repeat: 1,\n            repeatType: 'reverse',\n            repeatDelay: 0.2,\n            delay: 0.15,\n          },\n          scale: {\n            duration: 0.2,\n            ease: 'easeInOut',\n            repeat: 1,\n            repeatType: 'reverse',\n            repeatDelay: 0.2,\n            delay: 0.15,\n          },\n        },\n      },\n    },\n    circle: {\n      initial: { opacity: 1, scale: 1 },\n      animate: {\n        opacity: 0,\n        scale: 0,\n        transition: {\n          opacity: {\n            duration: 0.2,\n            ease: 'easeInOut',\n            repeat: 1,\n            repeatType: 'reverse',\n            repeatDelay: 0.2,\n          },\n          scale: {\n            duration: 0.2,\n            ease: 'easeInOut',\n            repeat: 1,\n            repeatType: 'reverse',\n            repeatDelay: 0.2,\n          },\n        },\n      },\n    },\n  } satisfies Record<string, Variants>,\n  fill: {\n    group: {\n      initial: {\n        scale: 1,\n      },\n      animate: {\n        scale: [1, 0.9, 1.1, 1],\n        transition: { duration: 0.6, ease: 'easeInOut' },\n      },\n    },\n    path: {\n      initial: {\n        fill: 'currentColor',\n        fillOpacity: 0,\n      },\n      animate: {\n        fillOpacity: 1,\n        transition: { delay: 0.2 },\n      },\n    },\n    plus: {\n      initial: { opacity: 1, scale: 1 },\n      animate: {\n        opacity: 0,\n        scale: 0,\n        transition: {\n          opacity: {\n            duration: 0.2,\n            ease: 'easeInOut',\n            repeat: 1,\n            repeatType: 'reverse',\n            repeatDelay: 0.2,\n            delay: 0.15,\n          },\n          scale: {\n            duration: 0.2,\n            ease: 'easeInOut',\n            repeat: 1,\n            repeatType: 'reverse',\n            repeatDelay: 0.2,\n            delay: 0.15,\n          },\n        },\n      },\n    },\n    circle: {\n      initial: {\n        fill: 'currentColor',\n        fillOpacity: 0,\n        opacity: 1,\n        scale: 1,\n      },\n      animate: {\n        fillOpacity: 1,\n        opacity: 0,\n        scale: 0,\n        transition: {\n          fillOpacity: { delay: 0.2 },\n          opacity: {\n            duration: 0.2,\n            ease: 'easeInOut',\n            repeat: 1,\n            repeatType: 'reverse',\n            repeatDelay: 0.2,\n          },\n          scale: {\n            duration: 0.2,\n            ease: 'easeInOut',\n            repeat: 1,\n            repeatType: 'reverse',\n            repeatDelay: 0.2,\n          },\n        },\n      },\n    },\n  } satisfies Record<string, Variants>,\n} as const;\n\nfunction IconComponent({ size, ...props }: SparklesProps) {\n  const { controls } = useAnimateIconContext();\n  const variants = getVariants(animations);\n\n  return (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...props}\n    >\n      <motion.g variants={variants.group} initial=\"initial\" animate={controls}>\n        <motion.path\n          d=\"M11.017 2.814a1 1 0 0 1 1.966 0l1.051 5.558a2 2 0 0 0 1.594 1.594l5.558 1.051a1 1 0 0 1 0 1.966l-5.558 1.051a2 2 0 0 0-1.594 1.594l-1.051 5.558a1 1 0 0 1-1.966 0l-1.051-5.558a2 2 0 0 0-1.594-1.594l-5.558-1.051a1 1 0 0 1 0-1.966l5.558-1.051a2 2 0 0 0 1.594-1.594z\"\n          variants={variants.path}\n          initial=\"initial\"\n          animate={controls}\n        />\n      </motion.g>\n      <motion.path\n        d=\"M20 2v4 M22 4h-4\"\n        variants={variants.plus}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.circle\n        cx=\"4\"\n        cy=\"20\"\n        r=\"2\"\n        variants={variants.circle}\n        initial=\"initial\"\n        animate={controls}\n      />\n    </motion.svg>\n  );\n}\n\nfunction Sparkles(props: SparklesProps) {\n  return <IconWrapper icon={IconComponent} {...props} />;\n}\n\nexport {\n  animations,\n  Sparkles,\n  Sparkles as SparklesIcon,\n  type SparklesProps,\n  type SparklesProps as SparklesIconProps,\n};\n",
      "type": "registry:ui",
      "target": "components/animate-ui/icons/sparkles.tsx"
    }
  ],
  "meta": {
    "keywords": [
      "stars",
      "effect",
      "filter",
      "night",
      "magic"
    ]
  }
}