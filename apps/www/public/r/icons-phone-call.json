{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "icons-phone-call",
  "type": "registry:ui",
  "title": "Phone Call Icon",
  "description": "Phone call icon with animated waves.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "@animate-ui/icons-icon"
  ],
  "files": [
    {
      "path": "registry/icons/phone-call/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { motion, type Variants } from 'motion/react';\n\nimport {\n  getVariants,\n  useAnimateIconContext,\n  IconWrapper,\n  type IconProps,\n} from '@/components/animate-ui/icons/icon';\n\ntype PhoneCallProps = IconProps<keyof typeof animations>;\n\nconst animations = {\n  default: (() => {\n    const animation: Record<string, Variants> = {\n      phone: {},\n    };\n\n    for (let i = 1; i <= 2; i++) {\n      animation[`wave${i}`] = {\n        initial: { opacity: 1, scale: 1 },\n        animate: {\n          opacity: 0,\n          scale: 0,\n          transition: {\n            opacity: {\n              duration: 0.2,\n              ease: 'easeInOut',\n              repeat: 1,\n              repeatType: 'reverse',\n              repeatDelay: 0.2,\n              delay: 0.2 * (i - 1),\n            },\n            scale: {\n              duration: 0.2,\n              ease: 'easeInOut',\n              repeat: 1,\n              repeatType: 'reverse',\n              repeatDelay: 0.2,\n              delay: 0.2 * (i - 1),\n            },\n          },\n        },\n      };\n    }\n\n    return animation;\n  })() satisfies Record<string, Variants>,\n} as const;\n\nfunction IconComponent({ size, ...props }: PhoneCallProps) {\n  const { controls } = useAnimateIconContext();\n  const variants = getVariants(animations);\n\n  return (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...props}\n    >\n      {/* Waves (inner first, then outer with delay) */}\n      <motion.path\n        d=\"M13 6a5 5 0 0 1 5 5\"\n        variants={variants.wave1}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.path\n        d=\"M13 2a9 9 0 0 1 9 9\"\n        variants={variants.wave2}\n        initial=\"initial\"\n        animate={controls}\n      />\n      {/* Phone body */}\n      <motion.path\n        d=\"M13.832 16.568a1 1 0 0 0 1.213-.303l.355-.465A2 2 0 0 1 17 15h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2A18 18 0 0 1 2 4a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-.8 1.6l-.468.351a1 1 0 0 0-.292 1.233 14 14 0 0 0 6.392 6.384\"\n        variants={variants.phone}\n        initial=\"initial\"\n        animate={controls}\n      />\n    </motion.svg>\n  );\n}\n\nfunction PhoneCall(props: PhoneCallProps) {\n  return <IconWrapper icon={IconComponent} {...props} />;\n}\n\nexport {\n  animations,\n  PhoneCall,\n  PhoneCall as PhoneCallIcon,\n  type PhoneCallProps,\n  type PhoneCallProps as PhoneCallIconProps,\n};\n",
      "type": "registry:ui",
      "target": "components/animate-ui/icons/phone-call.tsx"
    }
  ],
  "meta": {
    "keywords": [
      "phone",
      "call",
      "ring",
      "audio",
      "dial",
      "contact",
      "communication",
      "voice",
      "waves",
      "signal"
    ]
  }
}