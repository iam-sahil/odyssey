{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "icons-square-kanban",
  "type": "registry:ui",
  "title": "Square Kanban Icon",
  "description": "Square Kanban icon component.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "@animate-ui/icons-icon"
  ],
  "files": [
    {
      "path": "registry/icons/square-kanban/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { motion, type Variants } from 'motion/react';\n\nimport {\n  getVariants,\n  useAnimateIconContext,\n  IconWrapper,\n  type IconProps,\n} from '@/components/animate-ui/icons/icon';\n\ntype SquareKanbanProps = IconProps<keyof typeof animations>;\n\nconst animations = {\n  default: {\n    rect: {},\n    line1: {\n      initial: {\n        y2: 16,\n      },\n      animate: {\n        y2: [16, 11, 14, 16],\n        transition: { duration: 0.6, ease: 'linear' },\n      },\n    },\n    line2: {\n      initial: {\n        y2: 11,\n      },\n      animate: {\n        y2: [11, 14, 16, 11],\n        transition: { duration: 0.6, ease: 'linear' },\n      },\n    },\n    line3: {\n      initial: {\n        y2: 14,\n      },\n      animate: {\n        y2: [14, 16, 11, 14],\n        transition: { duration: 0.6, ease: 'linear' },\n      },\n    },\n  } satisfies Record<string, Variants>,\n} as const;\n\nfunction IconComponent({ size, ...props }: SquareKanbanProps) {\n  const { controls } = useAnimateIconContext();\n  const variants = getVariants(animations);\n\n  return (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...props}\n    >\n      <motion.rect\n        x={3}\n        y={3}\n        width={18}\n        height={18}\n        rx={2}\n        ry={2}\n        variants={variants.rect}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1={16}\n        y1={7}\n        x2={16}\n        y2={16}\n        variants={variants.line1}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1={12}\n        y1={7}\n        x2={12}\n        y2={11}\n        variants={variants.line2}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1={8}\n        y1={7}\n        x2={8}\n        y2={14}\n        variants={variants.line3}\n        initial=\"initial\"\n        animate={controls}\n      />\n    </motion.svg>\n  );\n}\n\nfunction SquareKanban(props: SquareKanbanProps) {\n  return <IconWrapper icon={IconComponent} {...props} />;\n}\n\nexport {\n  animations,\n  SquareKanban,\n  SquareKanban as SquareKanbanIcon,\n  type SquareKanbanProps,\n  type SquareKanbanProps as SquareKanbanIconProps,\n};\n",
      "type": "registry:ui",
      "target": "components/animate-ui/icons/square-kanban.tsx"
    }
  ],
  "meta": {
    "keywords": [
      "projects",
      "manage",
      "overview",
      "board",
      "tickets",
      "issues",
      "roadmap",
      "plan",
      "intentions",
      "productivity",
      "work",
      "agile",
      "code",
      "coding"
    ]
  }
}