{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "icons-move-left",
  "type": "registry:ui",
  "title": "Move Left Icon",
  "description": "Move left icon component.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "@animate-ui/icons-icon"
  ],
  "files": [
    {
      "path": "registry/icons/move-left/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { motion, type Variants } from 'motion/react';\n\nimport {\n  getVariants,\n  useAnimateIconContext,\n  IconWrapper,\n  type IconProps,\n} from '@/components/animate-ui/icons/icon';\n\ntype MoveLeftProps = IconProps<keyof typeof animations>;\n\nconst animations = {\n  default: {\n    group1: {\n      initial: {\n        x: 0,\n        transition: { ease: 'easeInOut', duration: 0.3 },\n      },\n      animate: {\n        x: '-15%',\n        transition: { ease: 'easeInOut', duration: 0.3 },\n      },\n    },\n    group2: {},\n    path1: {},\n    path2: {},\n  } satisfies Record<string, Variants>,\n  'default-loop': {\n    group1: {\n      initial: {\n        x: 0,\n      },\n      animate: {\n        x: [0, '-15%', 0],\n        transition: { ease: 'easeInOut', duration: 0.6 },\n      },\n    },\n    group2: {},\n    path1: {},\n    path2: {},\n  } satisfies Record<string, Variants>,\n  pointing: {\n    group1: {},\n    group2: {},\n    path1: {\n      initial: {\n        d: 'M2 12H22',\n        transition: { ease: 'easeInOut', duration: 0.3 },\n      },\n      animate: {\n        d: 'M12 12H22',\n        transition: { ease: 'easeInOut', duration: 0.3 },\n      },\n    },\n    path2: {\n      initial: {\n        d: 'M6 8L2 12L6 16',\n        transition: { ease: 'easeInOut', duration: 0.3 },\n      },\n      animate: {\n        d: 'M15 8L11 12L15 16',\n        transition: { ease: 'easeInOut', duration: 0.3 },\n      },\n    },\n  } satisfies Record<string, Variants>,\n  'pointing-loop': {\n    group1: {},\n    group2: {},\n    path1: {\n      initial: {\n        d: 'M2 12H22',\n      },\n      animate: {\n        d: ['M2 12H22', 'M12 12H22', 'M2 12H22'],\n        transition: { ease: 'easeInOut', duration: 0.6 },\n      },\n    },\n    path2: {\n      initial: {\n        d: 'M6 8L2 12L6 16',\n      },\n      animate: {\n        d: ['M6 8L2 12L6 16', 'M15 8L11 12L15 16', 'M6 8L2 12L6 16'],\n        transition: { ease: 'easeInOut', duration: 0.6 },\n      },\n    },\n  } satisfies Record<string, Variants>,\n  out: {\n    group1: {},\n    group2: {\n      initial: {\n        x: 0,\n      },\n      animate: {\n        x: [0, '-150%', '150%', 0],\n        transition: {\n          default: { ease: 'easeInOut', duration: 0.6 },\n          x: {\n            ease: 'easeInOut',\n            duration: 0.6,\n            times: [0, 0.5, 0.5, 1],\n          },\n        },\n      },\n    },\n    path1: {},\n    path2: {},\n  } satisfies Record<string, Variants>,\n} as const;\n\nfunction IconComponent({ size, ...props }: MoveLeftProps) {\n  const { controls } = useAnimateIconContext();\n  const variants = getVariants(animations);\n\n  return (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      variants={variants.group1}\n      initial=\"initial\"\n      animate={controls}\n      {...props}\n    >\n      <motion.g variants={variants.group2} initial=\"initial\" animate={controls}>\n        <motion.path\n          d=\"M2 12H22\"\n          variants={variants.path1}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.path\n          d=\"M6 8L2 12L6 16\"\n          variants={variants.path2}\n          initial=\"initial\"\n          animate={controls}\n        />\n      </motion.g>\n    </motion.svg>\n  );\n}\n\nfunction MoveLeft(props: MoveLeftProps) {\n  return <IconWrapper icon={IconComponent} {...props} />;\n}\n\nexport {\n  animations,\n  MoveLeft,\n  MoveLeft as MoveLeftIcon,\n  type MoveLeftProps,\n  type MoveLeftProps as MoveLeftIconProps,\n};\n",
      "type": "registry:ui",
      "target": "components/animate-ui/icons/move-left.tsx"
    }
  ],
  "meta": {
    "keywords": [
      "move",
      "arrow",
      "left",
      "back",
      "previous",
      "direction",
      "east",
      "<-"
    ]
  }
}