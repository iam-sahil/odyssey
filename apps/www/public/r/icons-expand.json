{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "icons-expand",
  "type": "registry:ui",
  "title": "Expand Icon",
  "description": "Expand icon component.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "@animate-ui/icons-icon"
  ],
  "files": [
    {
      "path": "registry/icons/expand/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { motion, type Variants } from 'motion/react';\n\nimport {\n  getVariants,\n  useAnimateIconContext,\n  IconWrapper,\n  type IconProps,\n} from '@/components/animate-ui/icons/icon';\n\ntype ExpandProps = IconProps<keyof typeof animations>;\n\nconst animations = {\n  default: {\n    group1: {\n      initial: {\n        y: 0,\n        x: 0,\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n      animate: {\n        y: 2,\n        x: 2,\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n    },\n    group2: {\n      initial: {\n        y: 0,\n        x: 0,\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n      animate: {\n        y: -2,\n        x: 2,\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n    },\n    group3: {\n      initial: {\n        y: 0,\n        x: 0,\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n      animate: {\n        y: 2,\n        x: -2,\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n    },\n    group4: {\n      initial: {\n        y: 0,\n        x: 0,\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n      animate: {\n        y: -2,\n        x: -2,\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n    },\n    path1: {},\n    path2: {},\n    path3: {},\n    path4: {},\n    path5: {},\n    path6: {},\n    path7: {},\n    path8: {},\n  } satisfies Record<string, Variants>,\n  'default-loop': {\n    group1: {\n      initial: {\n        y: 0,\n        x: 0,\n      },\n      animate: {\n        y: [0, 2, 0],\n        x: [0, 2, 0],\n        transition: { duration: 0.6, ease: 'easeInOut' },\n      },\n    },\n    group2: {\n      initial: {\n        y: 0,\n        x: 0,\n      },\n      animate: {\n        y: [0, -2, 0],\n        x: [0, 2, 0],\n        transition: { duration: 0.6, ease: 'easeInOut' },\n      },\n    },\n    group3: {\n      initial: {\n        y: 0,\n        x: 0,\n      },\n      animate: {\n        y: [0, 2, 0],\n        x: [0, -2, 0],\n        transition: { duration: 0.6, ease: 'easeInOut' },\n      },\n    },\n    group4: {\n      initial: {\n        y: 0,\n        x: 0,\n      },\n      animate: {\n        y: [0, -2, 0],\n        x: [0, -2, 0],\n        transition: { duration: 0.6, ease: 'easeInOut' },\n      },\n    },\n    path1: {},\n    path2: {},\n    path3: {},\n    path4: {},\n    path5: {},\n    path6: {},\n    path7: {},\n    path8: {},\n  } satisfies Record<string, Variants>,\n} as const;\n\nfunction IconComponent({ size, ...props }: ExpandProps) {\n  const { controls } = useAnimateIconContext();\n  const variants = getVariants(animations);\n\n  return (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...props}\n    >\n      <motion.g variants={variants.group1} initial=\"initial\" animate={controls}>\n        <motion.path\n          d=\"m15 15 6 6\"\n          variants={variants.path1}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.path\n          d=\"M21 16v5h-5\"\n          variants={variants.path3}\n          initial=\"initial\"\n          animate={controls}\n        />\n      </motion.g>\n      <motion.g variants={variants.group2} initial=\"initial\" animate={controls}>\n        <motion.path\n          d=\"m15 9 6-6\"\n          variants={variants.path2}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.path\n          d=\"M21 8V3h-5\"\n          variants={variants.path4}\n          initial=\"initial\"\n          animate={controls}\n        />\n      </motion.g>\n      <motion.g variants={variants.group3} initial=\"initial\" animate={controls}>\n        <motion.path\n          d=\"M3 16v5h5\"\n          variants={variants.path5}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.path\n          d=\"m3 21 6-6\"\n          variants={variants.path6}\n          initial=\"initial\"\n          animate={controls}\n        />\n      </motion.g>\n      <motion.g variants={variants.group4} initial=\"initial\" animate={controls}>\n        <motion.path\n          d=\"M3 8V3h5\"\n          variants={variants.path7}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.path\n          d=\"M9 9 3 3\"\n          variants={variants.path8}\n          initial=\"initial\"\n          animate={controls}\n        />\n      </motion.g>\n    </motion.svg>\n  );\n}\n\nfunction Expand(props: ExpandProps) {\n  return <IconWrapper icon={IconComponent} {...props} />;\n}\n\nexport {\n  animations,\n  Expand,\n  Expand as ExpandIcon,\n  type ExpandProps,\n  type ExpandProps as ExpandIconProps,\n};\n",
      "type": "registry:ui",
      "target": "components/animate-ui/icons/expand.tsx"
    }
  ],
  "meta": {
    "keywords": [
      "scale",
      "fullscreen",
      "maximize",
      "minimize",
      "contract"
    ]
  }
}