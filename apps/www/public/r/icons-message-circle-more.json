{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "icons-message-circle-more",
  "type": "registry:ui",
  "title": "Message Circle More Icon",
  "description": "Message circle more icon component.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "@animate-ui/icons-icon"
  ],
  "files": [
    {
      "path": "registry/icons/message-circle-more/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { motion, type Variants } from 'motion/react';\n\nimport {\n  getVariants,\n  useAnimateIconContext,\n  IconWrapper,\n  type IconProps,\n} from '@/components/animate-ui/icons/icon';\n\ntype MessageCircleMoreProps = IconProps<keyof typeof animations>;\n\nconst animations = {\n  default: {\n    group: {\n      initial: {\n        rotate: 0,\n      },\n      animate: {\n        transformOrigin: 'bottom left',\n        rotate: [0, 8, -8, 2, 0],\n        transition: {\n          ease: 'easeInOut',\n          duration: 0.8,\n          times: [0, 0.4, 0.6, 0.8, 1],\n        },\n      },\n    },\n    path: {},\n    line1: {\n      initial: {\n        y1: 12,\n        y2: 12,\n      },\n      animate: {\n        y1: [12, 10.5, 12],\n        y2: [12, 13.5, 12],\n        transition: { ease: 'easeInOut', duration: 0.6, delay: 0.2 },\n      },\n    },\n    line2: {\n      initial: {\n        y1: 12,\n        y2: 12,\n      },\n      animate: {\n        y1: [12, 10.5, 12],\n        y2: [12, 13.5, 12],\n        transition: { ease: 'easeInOut', duration: 0.6, delay: 0.1 },\n      },\n    },\n    line3: {\n      initial: {\n        y1: 12,\n        y2: 12,\n      },\n      animate: {\n        y1: [12, 10.5, 12],\n        y2: [12, 13.5, 12],\n        transition: { ease: 'easeInOut', duration: 0.6 },\n      },\n    },\n  } satisfies Record<string, Variants>,\n  pulse: {\n    group: {},\n    path: {},\n    line1: {\n      initial: {\n        scale: 1,\n      },\n      animate: {\n        scale: [1, 1.5, 1],\n        transition: {\n          duration: 1,\n          delay: 0.4,\n          ease: 'easeInOut',\n        },\n      },\n    },\n    line2: {\n      initial: {\n        scale: 1,\n      },\n      animate: {\n        scale: [1, 1.5, 1],\n        transition: {\n          duration: 1,\n          delay: 0.2,\n          ease: 'easeInOut',\n        },\n      },\n    },\n    line3: {\n      initial: {\n        scale: 1,\n      },\n      animate: {\n        scale: [1, 1.5, 1],\n        transition: {\n          duration: 1,\n          ease: 'easeInOut',\n        },\n      },\n    },\n  } satisfies Record<string, Variants>,\n  jump: {\n    group: {},\n    path: {},\n    line1: {\n      initial: {\n        y: 0,\n      },\n      animate: {\n        y: [-0.75, 0.75],\n        transition: {\n          duration: 0.8,\n          delay: 0.4,\n          repeat: Infinity,\n          repeatType: 'mirror',\n          ease: 'easeInOut',\n        },\n      },\n    },\n    line2: {\n      initial: {\n        y: 0,\n      },\n      animate: {\n        y: [-0.75, 0.75],\n        transition: {\n          duration: 0.8,\n          delay: 0.2,\n          repeat: Infinity,\n          repeatType: 'mirror',\n          ease: 'easeInOut',\n        },\n      },\n    },\n    line3: {\n      initial: {\n        y: 0,\n      },\n      animate: {\n        y: [-0.75, 0.75],\n        transition: {\n          duration: 0.8,\n          repeat: Infinity,\n          repeatType: 'mirror',\n          ease: 'easeInOut',\n        },\n      },\n    },\n  } satisfies Record<string, Variants>,\n} as const;\n\nfunction IconComponent({ size, ...props }: MessageCircleMoreProps) {\n  const { controls } = useAnimateIconContext();\n  const variants = getVariants(animations);\n\n  return (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...props}\n    >\n      <motion.g variants={variants.group} initial=\"initial\" animate={controls}>\n        <motion.path\n          d=\"M7.9 20A9 9 0 1 0 4 16.1L2 22Z\"\n          variants={variants.path}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.line\n          x1=\"16\"\n          y1=\"12\"\n          x2=\"16\"\n          y2=\"12\"\n          variants={variants.line1}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.line\n          x1=\"12\"\n          y1=\"12\"\n          x2=\"12\"\n          y2=\"12\"\n          variants={variants.line2}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.line\n          x1=\"8\"\n          y1=\"12\"\n          x2=\"8\"\n          y2=\"12\"\n          variants={variants.line3}\n          initial=\"initial\"\n          animate={controls}\n        />\n      </motion.g>\n    </motion.svg>\n  );\n}\n\nfunction MessageCircleMore(props: MessageCircleMoreProps) {\n  return <IconWrapper icon={IconComponent} {...props} />;\n}\n\nexport {\n  animations,\n  MessageCircleMore,\n  MessageCircleMore as MessageCircleMoreIcon,\n  type MessageCircleMoreProps,\n  type MessageCircleMoreProps as MessageCircleMoreIconProps,\n};\n",
      "type": "registry:ui",
      "target": "components/animate-ui/icons/message-circle-more.tsx"
    }
  ],
  "meta": {
    "keywords": [
      "comment",
      "chat",
      "conversation",
      "dialog",
      "feedback",
      "speech bubble",
      "typing",
      "writing",
      "responding",
      "ellipsis",
      "etc",
      "et cetera",
      "..."
    ]
  }
}