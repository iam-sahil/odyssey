{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "icons-sun-moon",
  "type": "registry:ui",
  "title": "Sun Moon Icon",
  "description": "Sun moon icon component.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "@animate-ui/icons-icon"
  ],
  "files": [
    {
      "path": "registry/icons/sun-moon/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { motion, type Variants } from 'motion/react';\n\nimport {\n  getVariants,\n  useAnimateIconContext,\n  IconWrapper,\n  type IconProps,\n} from '@/components/animate-ui/icons/icon';\n\ntype SunMoonProps = IconProps<keyof typeof animations>;\n\nconst animations = {\n  default: (() => {\n    const animation: Record<string, Variants> = {\n      path1: {\n        initial: {\n          rotate: 0,\n        },\n        animate: {\n          rotate: [0, -10, 10, 0],\n          transition: {\n            duration: 0.6,\n            ease: 'easeInOut',\n          },\n        },\n      },\n      path2: {},\n    };\n\n    for (let i = 1; i <= 3; i++) {\n      animation[`line${i}`] = {\n        initial: { opacity: 1, scale: 1 },\n        animate: {\n          opacity: [0, 1],\n          pathLength: [0, 1],\n          transition: {\n            duration: 0.6,\n            ease: 'easeInOut',\n            delay: (i - 1) * 0.15,\n          },\n        },\n      };\n    }\n\n    return animation;\n  })() satisfies Record<string, Variants>,\n} as const;\n\nfunction IconComponent({ size, ...props }: SunMoonProps) {\n  const { controls } = useAnimateIconContext();\n  const variants = getVariants(animations);\n\n  return (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      initial=\"initial\"\n      animate={controls}\n      {...props}\n    >\n      <motion.path\n        d=\"M14.837 16.385a6 6 0 1 1-7.223-7.222c.624-.147.97.66.715 1.248a4 4 0 0 0 5.26 5.259c.589-.255 1.396.09 1.248.715\"\n        variants={variants.path1}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.path\n        d=\"M16 12a4 4 0 0 0-4-4\"\n        variants={variants.path2}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1=\"12\"\n        y1=\"4\"\n        x2=\"12\"\n        y2=\"2\"\n        variants={variants.line1}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1=\"17.7\"\n        y1=\"6.3\"\n        x2=\"19\"\n        y2=\"5\"\n        variants={variants.line2}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1=\"20\"\n        y1=\"12\"\n        x2=\"22\"\n        y2=\"12\"\n        variants={variants.line3}\n        initial=\"initial\"\n        animate={controls}\n      />\n    </motion.svg>\n  );\n}\n\nfunction SunMoon(props: SunMoonProps) {\n  return <IconWrapper icon={IconComponent} {...props} />;\n}\n\nexport {\n  animations,\n  SunMoon,\n  SunMoon as SunMoonIcon,\n  type SunMoonProps,\n  type SunMoonProps as SunMoonIconProps,\n};\n",
      "type": "registry:ui",
      "target": "components/animate-ui/icons/sun-moon.tsx"
    }
  ],
  "meta": {
    "keywords": [
      "dark",
      "light",
      "moon",
      "sun",
      "brightness",
      "theme",
      "auto theme",
      "system theme",
      "appearance"
    ]
  }
}