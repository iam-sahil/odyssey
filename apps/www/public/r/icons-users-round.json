{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "icons-users-round",
  "type": "registry:ui",
  "title": "Users Round Icon",
  "description": "Users round icon component.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "@animate-ui/icons-icon"
  ],
  "files": [
    {
      "path": "registry/icons/users-round/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { motion, type Variants } from 'motion/react';\n\nimport {\n  getVariants,\n  useAnimateIconContext,\n  IconWrapper,\n  type IconProps,\n} from '@/components/animate-ui/icons/icon';\n\ntype UsersRoundProps = IconProps<keyof typeof animations>;\n\nconst animations = {\n  default: {\n    path1: {\n      initial: {\n        y: 0,\n      },\n      animate: {\n        y: [0, 4, -2, 0],\n        transition: {\n          duration: 0.6,\n          ease: 'easeInOut',\n          delay: 0.1,\n        },\n      },\n    },\n    path2: {\n      initial: {\n        y: 0,\n      },\n      animate: {\n        y: [0, 1, -2, 0],\n        transition: {\n          duration: 0.6,\n          ease: 'easeInOut',\n        },\n      },\n    },\n    path3: {\n      initial: {\n        y: 0,\n      },\n      animate: {\n        y: [0, 4, -2, 0],\n        transition: {\n          duration: 0.6,\n          ease: 'easeInOut',\n        },\n      },\n    },\n    circle: {\n      initial: {\n        y: 0,\n      },\n      animate: {\n        y: [0, 1, -2, 0],\n        transition: {\n          duration: 0.6,\n          ease: 'easeInOut',\n          delay: 0.1,\n        },\n      },\n    },\n  } satisfies Record<string, Variants>,\n  appear: {\n    path1: {},\n    path2: {\n      initial: {\n        x: -5,\n        opacity: 0,\n      },\n      animate: {\n        x: 0,\n        opacity: 1,\n        transition: {\n          type: 'spring',\n          stiffness: 100,\n          damping: 10,\n        },\n      },\n    },\n    path3: {\n      initial: {\n        x: -5,\n        opacity: 0,\n      },\n      animate: {\n        x: 0,\n        opacity: 1,\n        transition: {\n          type: 'spring',\n          stiffness: 100,\n          damping: 10,\n        },\n      },\n    },\n    circle: {},\n  } satisfies Record<string, Variants>,\n} as const;\n\nfunction IconComponent({ size, ...props }: UsersRoundProps) {\n  const { controls } = useAnimateIconContext();\n  const variants = getVariants(animations);\n\n  return (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...props}\n    >\n      <motion.path\n        d=\"M18,21c0-4.4-3.6-8-8-8s-8,3.6-8,8\"\n        variants={variants.path1}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.path\n        d=\"M18,12c2.2-1.7,2.7-4.8,1-7-.4-.5-.9-1-1.4-1.3\"\n        variants={variants.path2}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.path\n        d=\"M22,20c0-3.4-2-6.5-4-8\"\n        variants={variants.path3}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.circle\n        cx={10}\n        cy={8}\n        r={5}\n        variants={variants.circle}\n        initial=\"initial\"\n        animate={controls}\n      />\n    </motion.svg>\n  );\n}\n\nfunction UsersRound(props: UsersRoundProps) {\n  return <IconWrapper icon={IconComponent} {...props} />;\n}\n\nexport {\n  animations,\n  UsersRound,\n  UsersRound as UsersRoundIcon,\n  type UsersRoundProps,\n  type UsersRoundProps as UsersRoundIconProps,\n};\n",
      "type": "registry:ui",
      "target": "components/animate-ui/icons/users-round.tsx"
    }
  ],
  "meta": {
    "keywords": [
      "group",
      "people"
    ]
  }
}