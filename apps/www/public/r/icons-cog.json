{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "icons-cog",
  "type": "registry:ui",
  "title": "Cog Icon",
  "description": "Cog icon component.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "@animate-ui/icons-icon"
  ],
  "files": [
    {
      "path": "registry/icons/cog/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { motion, type Variants } from 'motion/react';\n\nimport {\n  getVariants,\n  useAnimateIconContext,\n  IconWrapper,\n  type IconProps,\n} from '@/components/animate-ui/icons/icon';\n\ntype CogProps = IconProps<keyof typeof animations>;\n\nconst animations = {\n  default: {\n    group: {\n      initial: {\n        rotate: 0,\n      },\n      animate: {\n        rotate: [0, 90, 180],\n        transition: {\n          duration: 1.25,\n          ease: 'easeInOut',\n        },\n      },\n    },\n    path1: {},\n    path2: {},\n    path3: {},\n    path4: {},\n    path5: {},\n    path6: {},\n    path7: {},\n    path8: {},\n    path9: {},\n    path10: {},\n    path11: {},\n    path12: {},\n    path13: {},\n    path14: {},\n  } satisfies Record<string, Variants>,\n  'default-loop': {\n    group: {\n      initial: {\n        rotate: 0,\n      },\n      animate: {\n        rotate: [0, 90, 180, 270, 360],\n        transition: {\n          duration: 2.5,\n          ease: 'easeInOut',\n        },\n      },\n    },\n    path1: {},\n    path2: {},\n    path3: {},\n    path4: {},\n    path5: {},\n    path6: {},\n    path7: {},\n    path8: {},\n    path9: {},\n    path10: {},\n    path11: {},\n    path12: {},\n    path13: {},\n    path14: {},\n  } satisfies Record<string, Variants>,\n  rotate: {\n    group: {\n      initial: {\n        rotate: 0,\n      },\n      animate: {\n        rotate: 360,\n        transition: {\n          duration: 2,\n          ease: 'linear',\n        },\n      },\n    },\n    path1: {},\n    path2: {},\n    path3: {},\n    path4: {},\n    path5: {},\n    path6: {},\n    path7: {},\n    path8: {},\n    path9: {},\n    path10: {},\n    path11: {},\n    path12: {},\n    path13: {},\n    path14: {},\n  } satisfies Record<string, Variants>,\n} as const;\n\nfunction IconComponent({ size, ...props }: CogProps) {\n  const { controls } = useAnimateIconContext();\n  const variants = getVariants(animations);\n\n  return (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...props}\n    >\n      <motion.g variants={variants.group} initial=\"initial\" animate={controls}>\n        <motion.path\n          d=\"M12 20a8 8 0 1 0 0-16 8 8 0 0 0 0 16Z\"\n          variants={variants.path1}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.path\n          d=\"M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z\"\n          variants={variants.path2}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.path\n          d=\"M12 2v2\"\n          variants={variants.path3}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.path\n          d=\"M12 22v-2\"\n          variants={variants.path4}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.path\n          d=\"m17 20.66-1-1.73\"\n          variants={variants.path5}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.path\n          d=\"M11 10.27 7 3.34\"\n          variants={variants.path6}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.path\n          d=\"m20.66 17-1.73-1\"\n          variants={variants.path7}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.path\n          d=\"m3.34 7 1.73 1\"\n          variants={variants.path8}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.path\n          d=\"M14 12h8\"\n          variants={variants.path9}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.path\n          d=\"M2 12h2\"\n          variants={variants.path10}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.path\n          d=\"m20.66 7-1.73 1\"\n          variants={variants.path11}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.path\n          d=\"m3.34 17 1.73-1\"\n          variants={variants.path12}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.path\n          d=\"m17 3.34-1 1.73\"\n          variants={variants.path13}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.path\n          d=\"m11 13.73-4 6.93\"\n          variants={variants.path14}\n          initial=\"initial\"\n          animate={controls}\n        />\n      </motion.g>\n    </motion.svg>\n  );\n}\n\nfunction Cog(props: CogProps) {\n  return <IconWrapper icon={IconComponent} {...props} />;\n}\n\nexport {\n  animations,\n  Cog,\n  Cog as CogIcon,\n  type CogProps,\n  type CogProps as CogIconProps,\n};\n",
      "type": "registry:ui",
      "target": "components/animate-ui/icons/cog.tsx"
    }
  ],
  "meta": {
    "keywords": [
      "computing",
      "settings",
      "cog",
      "edit",
      "gear",
      "preferences",
      "controls",
      "configuration",
      "fixed",
      "build",
      "construction",
      "parts"
    ]
  }
}