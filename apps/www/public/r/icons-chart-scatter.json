{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "icons-chart-scatter",
  "type": "registry:ui",
  "title": "Chart Scatter Icon",
  "description": "Chart scatter icon component.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "@animate-ui/icons-icon"
  ],
  "files": [
    {
      "path": "registry/icons/chart-scatter/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { motion, type Variants } from 'motion/react';\n\nimport {\n  getVariants,\n  useAnimateIconContext,\n  IconWrapper,\n  type IconProps,\n} from '@/components/animate-ui/icons/icon';\n\ntype ChartScatterProps = IconProps<keyof typeof animations>;\n\nconst animations = {\n  default: (() => {\n    const animation: Record<string, Variants> = {};\n\n    for (let i = 1; i <= 5; i++) {\n      animation[`circle${i}`] = {\n        initial: { opacity: 1 },\n        animate: {\n          opacity: [0, 1],\n          scale: [0, 1],\n          transition: {\n            ease: 'easeInOut',\n            duration: 0.3,\n            delay: (i - 1) * 0.3,\n          },\n        },\n      };\n    }\n\n    return animation as Record<string, Variants>;\n  })() satisfies Record<string, Variants>,\n} as const;\n\nfunction IconComponent({ size, ...props }: ChartScatterProps) {\n  const { controls } = useAnimateIconContext();\n  const variants = getVariants(animations);\n\n  return (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...props}\n    >\n      <motion.circle\n        cx=\"7.5\"\n        cy=\"7.5\"\n        r=\".5\"\n        variants={variants.circle1}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.circle\n        cx=\"18.5\"\n        cy=\"5.5\"\n        r=\".5\"\n        variants={variants.circle2}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.circle\n        cx=\"11.5\"\n        cy=\"11.5\"\n        r=\".5\"\n        variants={variants.circle3}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.circle\n        cx=\"7.5\"\n        cy=\"16.5\"\n        r=\".5\"\n        variants={variants.circle4}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.circle\n        cx=\"17.5\"\n        cy=\"14.5\"\n        r=\".5\"\n        variants={variants.circle5}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.path\n        d=\"M3 3v16a2 2 0 0 0 2 2h16\"\n        variants={variants.path}\n        initial=\"initial\"\n        animate={controls}\n      />\n    </motion.svg>\n  );\n}\n\nfunction ChartScatter(props: ChartScatterProps) {\n  return <IconWrapper icon={IconComponent} {...props} />;\n}\n\nexport {\n  animations,\n  ChartScatter,\n  ChartScatter as ChartScatterIcon,\n  type ChartScatterProps,\n  type ChartScatterProps as ChartScatterIconProps,\n};\n",
      "type": "registry:ui",
      "target": "components/animate-ui/icons/chart-scatter.tsx"
    }
  ],
  "meta": {
    "keywords": [
      "statistics",
      "analytics",
      "diagram",
      "graph"
    ]
  }
}