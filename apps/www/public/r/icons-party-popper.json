{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "icons-party-popper",
  "type": "registry:ui",
  "title": "Party Popper Icon",
  "description": "Party popper icon component.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "@animate-ui/icons-icon"
  ],
  "files": [
    {
      "path": "registry/icons/party-popper/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { motion, type Variants } from 'motion/react';\n\nimport {\n  getVariants,\n  useAnimateIconContext,\n  IconWrapper,\n  type IconProps,\n} from '@/components/animate-ui/icons/icon';\n\ntype PartyPopperProps = IconProps<keyof typeof animations>;\n\nconst popperAnimation: Variants = {\n  initial: {\n    opacity: 1,\n    pathLength: 1,\n    pathOffset: 0,\n    scale: 1,\n    x: 0,\n    y: 0,\n  },\n  animate: {\n    opacity: [0, 0, 0, 1, 1],\n    scale: [0.3, 0.8, 1, 1.1, 1],\n    pathLength: [0, 0.5, 1],\n    pathOffset: [1, 0.5, 0],\n    x: [-5, 0],\n    y: [5, 0],\n    transition: {\n      duration: 0.6,\n      ease: 'easeInOut',\n    },\n  },\n};\n\nconst animations = {\n  default: {\n    group: {\n      initial: {\n        x: 0,\n        y: 0,\n      },\n      animate: {\n        x: [-1, 1, 0],\n        y: [1, -1, 0],\n        scale: [1, 0.7, 1.1, 1],\n        transformOrigin: 'bottom left',\n        transition: {\n          duration: 0.6,\n          ease: 'easeInOut',\n        },\n      },\n    },\n    path1: {},\n    path2: {},\n    path3: {\n      initial: { opacity: 1, scale: 1, x: 0, y: 0 },\n      animate: {\n        opacity: [0, 0, 0, 1, 1],\n        x: [-5, 0],\n        y: [5, 0],\n        scale: [0.5, 1, 1.2, 1],\n        transition: {\n          duration: 0.6,\n        },\n      },\n    },\n    path4: {\n      initial: { opacity: 1, scale: 1, x: 0, y: 0 },\n      animate: {\n        opacity: [0, 0, 0, 1, 1],\n        x: [-10, 0],\n        y: [10, 0],\n        scale: [0.5, 1, 1.2, 1],\n        transition: {\n          duration: 0.6,\n        },\n      },\n    },\n    path5: {\n      initial: { opacity: 1, scale: 1, x: 0, y: 0 },\n      animate: {\n        opacity: [0, 0, 0, 1, 1],\n        x: [-10, 0],\n        y: [10, 0],\n        scale: [0.5, 1, 1.2, 1],\n        transition: {\n          duration: 0.6,\n        },\n      },\n    },\n    path6: {\n      initial: { opacity: 1, scale: 1, x: 0, y: 0 },\n      animate: {\n        opacity: [0, 0, 0, 1, 1],\n        x: [-5, 0],\n        y: [5, 0],\n        scale: [0.5, 1, 1.2, 1],\n        transition: {\n          duration: 0.6,\n        },\n      },\n    },\n    path7: popperAnimation,\n    path8: popperAnimation,\n    path9: popperAnimation,\n  } satisfies Record<string, Variants>,\n} as const;\n\nfunction IconComponent({ size, ...props }: PartyPopperProps) {\n  const { controls } = useAnimateIconContext();\n  const variants = getVariants(animations);\n\n  return (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...props}\n    >\n      <motion.g variants={variants.group} initial=\"initial\" animate={controls}>\n        <motion.path\n          d=\"M5.8 11.3 2 22l10.7-3.79\"\n          variants={variants.path1}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.path\n          d=\"M11 13c1.93 1.93 2.83 4.17 2 5-.83.83-3.07-.07-5-2-1.93-1.93-2.83-4.17-2-5 .83-.83 3.07.07 5 2Z\"\n          variants={variants.path2}\n          initial=\"initial\"\n          animate={controls}\n        />\n      </motion.g>\n      <motion.path\n        d=\"M4 3h.01\"\n        variants={variants.path3}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.path\n        d=\"M22 8h.01\"\n        variants={variants.path4}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.path\n        d=\"M15 2h.01\"\n        variants={variants.path5}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.path\n        d=\"M22 20h.01\"\n        variants={variants.path6}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.path\n        d=\"m22 2-2.24.75a2.9 2.9 0 0 0-1.96 3.12c.1.86-.57 1.63-1.45 1.63h-.38c-.86 0-1.6.6-1.76 1.44L14 10\"\n        variants={variants.path7}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.path\n        d=\"m22 13-.82-.33c-.86-.34-1.82.2-1.98 1.11c-.11.7-.72 1.22-1.43 1.22H17\"\n        variants={variants.path8}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.path\n        d=\"m11 2 .33.82c.34.86-.2 1.82-1.11 1.98C9.52 4.9 9 5.52 9 6.23V7\"\n        variants={variants.path9}\n        initial=\"initial\"\n        animate={controls}\n      />\n    </motion.svg>\n  );\n}\n\nfunction PartyPopper(props: PartyPopperProps) {\n  return <IconWrapper icon={IconComponent} {...props} />;\n}\n\nexport {\n  animations,\n  PartyPopper,\n  PartyPopper as PartyPopperIcon,\n  type PartyPopperProps,\n  type PartyPopperProps as PartyPopperIconProps,\n};\n",
      "type": "registry:ui",
      "target": "components/animate-ui/icons/party-popper.tsx"
    }
  ],
  "meta": {
    "keywords": [
      "emoji",
      "congratulations",
      "celebration",
      "party",
      "tada",
      " ðŸŽ‰",
      "ðŸŽŠ",
      "excitement",
      "exciting",
      "excites",
      "confetti"
    ]
  }
}