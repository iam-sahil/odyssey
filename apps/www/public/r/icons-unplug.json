{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "icons-unplug",
  "type": "registry:ui",
  "title": "Unplug Icon",
  "description": "Unplug icon component.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "@animate-ui/icons-icon"
  ],
  "files": [
    {
      "path": "registry/icons/unplug/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { motion, type Variants } from 'motion/react';\n\nimport {\n  getVariants,\n  useAnimateIconContext,\n  IconWrapper,\n  type IconProps,\n} from '@/components/animate-ui/icons/icon';\n\ntype UnplugProps = IconProps<keyof typeof animations>;\n\nconst animations = {\n  default: {\n    path1: {\n      initial: {\n        d: 'm19 5 3-3',\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n      animate: {\n        d: 'm16 8 6-6',\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n    },\n    path2: {\n      initial: {\n        x: 0,\n        y: 0,\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n      animate: {\n        x: -3,\n        y: 3,\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n    },\n    path3: {\n      initial: {\n        d: 'm2 22 3-3',\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n      animate: {\n        d: 'm2 22 6-6',\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n    },\n    path4: {\n      initial: {\n        x: 0,\n        y: 0,\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n      animate: {\n        x: 3,\n        y: -3,\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n    },\n    path5: {\n      initial: {\n        x: 0,\n        y: 0,\n        pathLength: 1,\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n      animate: {\n        x: 3,\n        y: -3,\n        pathLength: [1, 0],\n        transition: {\n          duration: 0.3,\n          ease: 'easeInOut',\n        },\n      },\n    },\n    path6: {\n      initial: {\n        x: 0,\n        y: 0,\n        pathLength: 1,\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n      animate: {\n        x: 3,\n        y: -3,\n        pathLength: [1, 0],\n        transition: {\n          duration: 0.3,\n          ease: 'easeInOut',\n        },\n      },\n    },\n  } satisfies Record<string, Variants>,\n  'default-loop': {\n    path1: {\n      initial: {\n        d: 'm19 5 3-3',\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n      animate: {\n        d: ['m19 5 3-3', 'm16 8 6-6', 'm19 5 3-3'],\n        transition: { duration: 0.6, ease: 'easeInOut' },\n      },\n    },\n    path2: {\n      initial: {\n        x: 0,\n        y: 0,\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n      animate: {\n        x: [0, -3, 0],\n        y: [0, 3, 0],\n        transition: { duration: 0.6, ease: 'easeInOut' },\n      },\n    },\n    path3: {\n      initial: {\n        d: 'm2 22 3-3',\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n      animate: {\n        d: ['m2 22 3-3', 'm2 22 6-6', 'm2 22 3-3'],\n        transition: { duration: 0.6, ease: 'easeInOut' },\n      },\n    },\n    path4: {\n      initial: {\n        x: 0,\n        y: 0,\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n      animate: {\n        x: [0, 3, 0],\n        y: [0, -3, 0],\n        transition: { duration: 0.6, ease: 'easeInOut' },\n      },\n    },\n    path5: {\n      initial: {\n        x: 0,\n        y: 0,\n        pathLength: 1,\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n      animate: {\n        x: [0, 3, 0],\n        y: [0, -3, 0],\n        pathLength: [1, 0, 1],\n        transition: {\n          duration: 0.6,\n          ease: 'easeInOut',\n        },\n      },\n    },\n    path6: {\n      initial: {\n        x: 0,\n        y: 0,\n        pathLength: 1,\n        transition: { duration: 0.3, ease: 'easeInOut' },\n      },\n      animate: {\n        x: [0, 3, 0],\n        y: [0, -3, 0],\n        pathLength: [1, 0, 1],\n        transition: {\n          duration: 0.6,\n          ease: 'easeInOut',\n        },\n      },\n    },\n  } satisfies Record<string, Variants>,\n} as const;\n\nfunction IconComponent({ size, ...props }: UnplugProps) {\n  const { controls } = useAnimateIconContext();\n  const variants = getVariants(animations);\n\n  return (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...props}\n    >\n      <motion.path\n        d=\"m19 5 3-3\"\n        variants={variants.path1}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.path\n        d=\"m12 6 6 6 2.3-2.3a2.4 2.4 0 0 0 0-3.4l-2.6-2.6a2.4 2.4 0 0 0-3.4 0Z\"\n        variants={variants.path2}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.path\n        d=\"m2 22 3-3\"\n        variants={variants.path3}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.path\n        d=\"M6.3 20.3a2.4 2.4 0 0 0 3.4 0L12 18l-6-6-2.3 2.3a2.4 2.4 0 0 0 0 3.4Z\"\n        variants={variants.path4}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.path\n        d=\"M7.5 13.5 10 11\"\n        variants={variants.path5}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.path\n        d=\"M10.5 16.5 13 14\"\n        variants={variants.path6}\n        initial=\"initial\"\n        animate={controls}\n      />\n    </motion.svg>\n  );\n}\n\nfunction Unplug(props: UnplugProps) {\n  return <IconWrapper icon={IconComponent} {...props} />;\n}\n\nexport {\n  animations,\n  Unplug,\n  Unplug as UnplugIcon,\n  type UnplugProps,\n  type UnplugProps as UnplugIconProps,\n};\n",
      "type": "registry:ui",
      "target": "components/animate-ui/icons/unplug.tsx"
    }
  ],
  "meta": {
    "keywords": [
      "electricity",
      "energy",
      "electronics",
      "socket",
      "outlet",
      "disconnect"
    ]
  }
}