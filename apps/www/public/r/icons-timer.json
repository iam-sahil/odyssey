{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "icons-timer",
  "type": "registry:ui",
  "title": "Timer Icon",
  "description": "Timer icon component.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "@animate-ui/icons-icon"
  ],
  "files": [
    {
      "path": "registry/icons/timer/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { motion, type Variants } from 'motion/react';\n\nimport {\n  getVariants,\n  useAnimateIconContext,\n  IconWrapper,\n  type IconProps,\n} from '@/components/animate-ui/icons/icon';\n\ntype TimerProps = IconProps<keyof typeof animations>;\n\nconst animations = {\n  default: {\n    circle: {},\n    line1: {\n      initial: {\n        rotate: 0,\n        transition: { ease: 'easeInOut', duration: 0.6 },\n      },\n      animate: {\n        transformOrigin: 'bottom left',\n        rotate: 360,\n        transition: { ease: 'easeInOut', duration: 0.6, delay: 0.15 },\n      },\n    },\n    line2: {\n      initial: {\n        y: 0,\n      },\n      animate: {\n        y: [0, 1.5, 0],\n        transition: { ease: 'easeInOut', duration: 0.3 },\n      },\n    },\n  } satisfies Record<string, Variants>,\n} as const;\n\nfunction IconComponent({ size, ...props }: TimerProps) {\n  const { controls } = useAnimateIconContext();\n  const variants = getVariants(animations);\n\n  return (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...props}\n    >\n      <motion.circle\n        cx={12}\n        cy={14}\n        r={8}\n        variants={variants.circle}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1={12}\n        x2={15}\n        y1={14}\n        y2={11}\n        variants={variants.line1}\n        initial=\"initial\"\n        animate={controls}\n      />\n      <motion.line\n        x1={10}\n        x2={14}\n        y1={2}\n        y2={2}\n        variants={variants.line2}\n        initial=\"initial\"\n        animate={controls}\n      />\n    </motion.svg>\n  );\n}\n\nfunction Timer(props: TimerProps) {\n  return <IconWrapper icon={IconComponent} {...props} />;\n}\n\nexport {\n  animations,\n  Timer,\n  Timer as TimerIcon,\n  type TimerProps,\n  type TimerProps as TimerIconProps,\n};\n",
      "type": "registry:ui",
      "target": "components/animate-ui/icons/timer.tsx"
    }
  ],
  "meta": {
    "keywords": [
      "time",
      "timer",
      "stopwatch"
    ]
  }
}