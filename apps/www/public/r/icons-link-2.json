{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "icons-link-2",
  "type": "registry:ui",
  "title": "Link 2 Icon",
  "description": "Link 2 icon with connect/unlink animations.",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "@animate-ui/icons-icon"
  ],
  "files": [
    {
      "path": "registry/icons/link-2/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { motion, type Variants } from 'motion/react';\n\nimport {\n  getVariants,\n  useAnimateIconContext,\n  IconWrapper,\n  type IconProps,\n} from '@/components/animate-ui/icons/icon';\n\ntype Link2Props = IconProps<keyof typeof animations>;\n\nconst spring = { type: 'spring', damping: 20, stiffness: 200 } as const;\n\nconst animations = {\n  // Little \"clink\" at the joint\n  default: {\n    left: {\n      initial: { rotate: 0, transformOrigin: '9px 12px' },\n      animate: {\n        rotate: [0, 10, 0],\n        transformOrigin: '9px 12px',\n        transition: { duration: 0.4, ease: 'easeInOut' },\n      },\n    },\n    right: {\n      initial: { rotate: 0, transformOrigin: '15px 12px' },\n      animate: {\n        rotate: [0, -6, 0],\n        transformOrigin: '15px 12px',\n        transition: { duration: 0.4, ease: 'easeInOut' },\n      },\n    },\n    middle: {\n      initial: { rotate: 0 },\n      animate: {\n        rotate: [0, 12, 0],\n        transition: { duration: 0.4, ease: 'easeInOut' },\n      },\n    },\n    burstTop: {\n      initial: { opacity: 0 },\n      animate: { opacity: 0 },\n    },\n    burstLeft: {\n      initial: { opacity: 0 },\n      animate: { opacity: 0 },\n    },\n    burstBottom: {\n      initial: { opacity: 0 },\n      animate: { opacity: 0 },\n    },\n    burstRight: {\n      initial: { opacity: 0 },\n      animate: { opacity: 0 },\n    },\n  } satisfies Record<string, Variants>,\n\n  // Pull apart: arcs move outward, line shrinks away\n  unlink: {\n    left: {\n      initial: { x: 0 },\n      animate: { x: -1, transition: spring },\n    },\n    right: {\n      initial: { x: 0 },\n      animate: { x: 1, transition: spring },\n    },\n    middle: {\n      initial: { opacity: 1, scale: 1 },\n      animate: {\n        opacity: 0,\n        scale: 0,\n        transition: { ...spring, delay: 0.1 },\n      },\n    },\n    burstTop: {\n      initial: { opacity: 0, scale: 0 },\n      animate: {\n        opacity: [0, 1, 0],\n        scale: [0, 1, 0],\n        transition: { duration: 0.4, ease: 'easeInOut', delay: 0.2 },\n      },\n    },\n    burstLeft: {\n      initial: { opacity: 0, scale: 0 },\n      animate: {\n        opacity: [0, 1, 0],\n        scale: [0, 1, 0],\n        transition: { duration: 0.4, ease: 'easeInOut', delay: 0.2 },\n      },\n    },\n    burstBottom: {\n      initial: { opacity: 0, scale: 0 },\n      animate: {\n        opacity: [0, 1, 0],\n        scale: [0, 1, 0],\n        transition: { duration: 0.4, ease: 'easeInOut', delay: 0.2 },\n      },\n    },\n    burstRight: {\n      initial: { opacity: 0, scale: 0 },\n      animate: {\n        opacity: [0, 1, 0],\n        scale: [0, 1, 0],\n        transition: { duration: 0.4, ease: 'easeInOut', delay: 0.2 },\n      },\n    },\n  } satisfies Record<string, Variants>,\n\n  // Pull apart: arcs move outward, line shrinks away\n  'unlink-loop': {\n    left: {\n      initial: { x: 0 },\n      animate: {\n        x: [-1, 0, -1],\n        transition: { duration: 0.6, ease: 'easeInOut' },\n      },\n    },\n    right: {\n      initial: { x: 0 },\n      animate: {\n        x: [1, 0, 1],\n        transition: { duration: 0.6, ease: 'easeInOut' },\n      },\n    },\n    middle: {\n      initial: { opacity: 1, scale: 1 },\n      animate: {\n        opacity: [1, 0, 1],\n        scale: [1, 0, 1],\n        transition: { duration: 0.6, ease: 'easeInOut', delay: 0.1 },\n      },\n    },\n    burstTop: {\n      initial: { opacity: 0, scale: 0 },\n      animate: {\n        opacity: [0, 1, 0, 0],\n        scale: [0, 1, 0, 0],\n        transition: { duration: 0.6, ease: 'easeInOut', delay: 0.2 },\n      },\n    },\n    burstLeft: {\n      initial: { opacity: 0, scale: 0 },\n      animate: {\n        opacity: [0, 1, 0, 0],\n        scale: [0, 1, 0, 0],\n        transition: { duration: 0.6, ease: 'easeInOut', delay: 0.2 },\n      },\n    },\n    burstBottom: {\n      initial: { opacity: 0, scale: 0 },\n      animate: {\n        opacity: [0, 1, 0, 0],\n        scale: [0, 1, 0, 0],\n        transition: { duration: 0.6, ease: 'easeInOut', delay: 0.2 },\n      },\n    },\n    burstRight: {\n      initial: { opacity: 0, scale: 0 },\n      animate: {\n        opacity: [0, 1, 0, 0],\n        scale: [0, 1, 0, 0],\n        transition: { duration: 0.6, ease: 'easeInOut', delay: 0.2 },\n      },\n    },\n  } satisfies Record<string, Variants>,\n\n  // Emphasize link: arcs nudge toward center, line pulses slightly\n  link: {\n    left: {\n      initial: { x: 0 },\n      animate: {\n        x: [0, 1.5, 0],\n        transition: { duration: 0.4, ease: 'easeInOut' },\n      },\n    },\n    right: {\n      initial: { x: 0 },\n      animate: {\n        x: [0, -1.5, 0],\n        transition: { duration: 0.4, ease: 'easeInOut' },\n      },\n    },\n    burstTop: {\n      initial: { opacity: 0 },\n      animate: { opacity: 0 },\n    },\n    burstLeft: {\n      initial: { opacity: 0 },\n      animate: { opacity: 0 },\n    },\n    burstBottom: {\n      initial: { opacity: 0 },\n      animate: { opacity: 0 },\n    },\n    burstRight: {\n      initial: { opacity: 0 },\n      animate: { opacity: 0 },\n    },\n  } satisfies Record<string, Variants>,\n} as const;\n\nfunction IconComponent({ size, ...props }: Link2Props) {\n  const { controls } = useAnimateIconContext();\n  const variants = getVariants(animations);\n\n  return (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...props}\n    >\n      {/* Left arc */}\n      <motion.path\n        d=\"M9 17H7A5 5 0 0 1 7 7h2\"\n        variants={variants.left}\n        initial=\"initial\"\n        animate={controls}\n      />\n      {/* Right arc */}\n      <motion.path\n        d=\"M15 7h2a5 5 0 1 1 0 10h-2\"\n        variants={variants.right}\n        initial=\"initial\"\n        animate={controls}\n      />\n      {/* Middle line */}\n      <motion.line\n        x1={8}\n        y1={12}\n        x2={16}\n        y2={12}\n        style={{ transformOrigin: '12px 12px' }}\n        variants={variants.middle}\n        initial=\"initial\"\n        animate={controls}\n      />\n      {/* Explosion lines (shown in unlink) - rotated around center to avoid overlap */}\n      <motion.g style={{ rotate: 45, transformOrigin: '12px 12px' }}>\n        <motion.line\n          x1={8}\n          y1={2}\n          x2={8}\n          y2={5}\n          style={{ transformOrigin: '8px 3.5px' }}\n          variants={variants.burstTop}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.line\n          x1={2}\n          y1={8}\n          x2={5}\n          y2={8}\n          style={{ transformOrigin: '3.5px 8px' }}\n          variants={variants.burstLeft}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.line\n          x1={16}\n          y1={19}\n          x2={16}\n          y2={22}\n          style={{ transformOrigin: '16px 20.5px' }}\n          variants={variants.burstBottom}\n          initial=\"initial\"\n          animate={controls}\n        />\n        <motion.line\n          x1={19}\n          y1={16}\n          x2={22}\n          y2={16}\n          style={{ transformOrigin: '20.5px 16px' }}\n          variants={variants.burstRight}\n          initial=\"initial\"\n          animate={controls}\n        />\n      </motion.g>\n    </motion.svg>\n  );\n}\n\nfunction Link2(props: Link2Props) {\n  return <IconWrapper icon={IconComponent} {...props} />;\n}\n\nexport {\n  animations,\n  Link2,\n  Link2 as Link2Icon,\n  type Link2Props,\n  type Link2Props as Link2IconProps,\n};\n",
      "type": "registry:ui",
      "target": "components/animate-ui/icons/link-2.tsx"
    }
  ],
  "meta": {
    "keywords": [
      "link",
      "connect",
      "chain",
      "url",
      "relation",
      "union",
      "attach"
    ]
  }
}